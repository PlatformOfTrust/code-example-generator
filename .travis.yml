branches:
  except:
  # latest branch is reserved for release tagging
  - latest
  
language: clojure

install:
  # Install dependencies.
  - lein run

script:
  # Run unit tests and generate code coverage report.
  - lein cloverage

  # Build binary.
  - lein uberjar

  # Test that binary works.
  - java -jar target/raml2http.jar

  # TODO Run integration/acceptance tests

after_success:
  # Add version suffix if TAG or create temporary local tag for deployment
  # so that release from master would not be named untagged-...
  # https://docs.travis-ci.com/user/deployment/releases/#setting-the-tag-at-deployment-time
  - if [ -n "$TRAVIS_TAG" ]; then
      mv target/raml2http.jar target/raml2http-${TRAVIS_TAG}.jar;
      export COMMIT_MSG= "<a href=\"./CHANGELOG.md\">Change log</a>"
    elif [ "$TRAVIS_BRANCH" = "feature/publish_jar" -a "$TRAVIS_PULL_REQUEST" =  "false" ]; then
      export TRAVIS_TAG=latest;
      # git tag -d latest;
      # git tag -a latest $TRAVIS_COMMIT
      export COMMIT_MSG= "Binary built from latest commit to master branch.";
    fi

# Deploy jar file to Github releases
deploy:
  - provider: releases
    api_key: $GITHUB_TOKEN
    name: ${TRAVIS_TAG} ($(date +'%Y-%m-%d'))
    tag_name: ${TRAVIS_TAG}
    target_commitish: $TRAVIS_COMMIT
    body: $COMMIT_MSG
    file_glob: true
    file: target/raml2http*
    overwrite: true
    skip_cleanup: true
  
after_script:
  # Run various code quality tools. Just for information.
  - lein eastwood
  - lein kibit
  - lein bikeshed

  # Check for outdated project dependencies.
  - lein deps

  # Display all annotations
  - lein annotations

