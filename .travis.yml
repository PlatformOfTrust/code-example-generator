language: clojure

install:
  # Install dependencies.
  - lein run

script:
  # Run unit tests and generate code coverage report.
  - lein cloverage

  # Build binary.
  - lein uberjar

  # Test that binary works.
  - java -jar target/raml2http.jar

  # TODO Run integration/acceptance tests

after_success:
  - echo Seems to work!


after_script:
  # Run various code quality tools. Just for information.
  - lein eastwood
  - lein kibit
  - lein bikeshed

  # Check for outdated project dependencies.
  - lein deps

  # Display all annotations
  - lein annotations

before_deploy:
  # add version suffix if TAG or create temporary local tag for deployment
  # so that release from master would not be named untagged-...
  - if [ -n "$TRAVIS_TAG" ]; then
      mv target/raml2http.jar target/raml2http-${TRAVIS-TAG}.jar;
    fi

  # Delete local and remote tags named `latest`
  - git tag -d latest || true
  - git push origin :refs/tags/latest || true

# Deploy jar file to Github releases
deploy:
  - provider: releases
    api_key: $GITHUB_TOKEN
    name: latest ($(date +'%Y-%m-%d'))
    tag_name: "latest"
    target_commitish: $TRAVIS_COMMIT
    body: "Binary built from latest commit to master branch."
    file: target/raml2http.jar
    overwrite: true
    skip_cleanup: true
    on:
      branch: feature/publish_jar
  - provider: releases
    api_key: $GITHUB_TOKEN
    body: "<a href=\"./CHANGELOG.md\">Change log</a>"
    file: target/raml2http-${TRAVIS_TAG}.jar
    skip_cleanup: true
    on:
      tags: true
