language: clojure

install:
  # Install dependencies.
  - lein run

script:
  # Run unit tests and generate code coverage report.
  - lein cloverage

  # Build binary.
  - lein uberjar

  # Test that binary works.
  - java -jar target/raml2http.jar

  # TODO Run integration/acceptance tests

after_success:
  - echo Seems to work!


after_script:
  # Run various code quality tools. Just for information.
  - lein eastwood
  - lein kibit
  - lein bikeshed

  # Check for outdated project dependencies.
  - lein deps

  # Display all annotations
  - lein annotations

before_deploy:
  # add version suffix if TAG or
  # create temporary local tag for deployment so that release from master
  # would not be named untagged-...
  - if [ -n "$TRAVIS_TAG" ]; then
    mv target/raml2http.jar target/raml2http-${TRAVIS-TAG}.jar;
    elif [ [ "$TRAVIS_BRANCH" = "feature/publish_jar" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ];
    git tag latest; export TRAVIS_TAG=latest;
    fi

# Deploy jar file to Github releases
deploy:
  provider: releases
  api_key: $GITHUB_TOKEN
  name: ${TRAVIS_TAG} ($(date +'%d.%m.%Y %R'))
  body: "https://github.com/PlatformOfTrust/code-examples-generator/blob/master/CHANGELOG.md"
  file_glob: true
  file: target/raml2http-*
  skip_cleanup: true
  on:
    all_branches: true

